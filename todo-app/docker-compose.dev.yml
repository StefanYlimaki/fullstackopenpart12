version: "3.8"
services:
  app:
    stdin_open: true
    tty: true
    image: todo-frontend-dev
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: ./todo-frontend/dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/src/:/app/src/ # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 5000:3000
    container_name: todo-frontend-dev # This will name the container hello-front-dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_BACKEND_URL=api/
  server: 
    image: todo-backend-dev
    build:
      context: ./todo-backend
      dockerfile: ./todo-backend/dev.Dockerfile
    volumes:
      - ./todo-backend/:/app/
    ports: 
      - 4000:3000
    container_name: todo-backend-dev
    environment: 
      REDIS_URL: redis://redis:6379
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      CHOKIDAR_USEPOLLING: true
    depends_on:
      - mongo
      - redis
  mongo:
    image: mongo
    ports:
     - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
  redis:
    image: redis:7.0.5-bullseye
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - server # wait for the frontend container to be started